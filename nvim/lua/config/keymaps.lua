-- Keymaps are automatically loaded on the VeryLazy event
-- Default keymaps that are always set: https://github.com/LazyVim/LazyVim/blob/main/lua/lazyvim/config/keymaps.lua
-- Add any additional keymaps here
local map = LazyVim.safe_keymap_set
map("n", "<leader>i", "<cmd>Telescope undo<cr>", { desc = "Telescope Undo" })
map("n", "<c-y>", ":Telescope yank_history<cr>")
map("n", "<leader>t", "<cmd>TodoTelescope<cr>")
vim.api.nvim_create_user_command("OpenR", function()
  vim.defer_fn(function()
    require("r.run").start_R("custom")
  end, 50)
  vim.defer_fn(function()
    vim.cmd("wincmd j")
  end, 100)
  vim.defer_fn(function()
    vim.cmd("resize 15")
  end, 150)
  vim.defer_fn(function()
    vim.cmd("wincmd k")
  end, 200)
  vim.defer_fn(function()
    require("r.browser").start()
  end, 250)
  vim.defer_fn(function()
    vim.cmd("wincmd h")
  end, 300)
end, {})
map("n", "<leader>r", "<cmd>OpenR<cr>", { desc = "Start R" })
map("n", "<localleader>t", "<cmd>ToggleTerm direction=float<cr>", { desc = "Open floating terminal" })
map("n", "<leader>m", "<cmd>MoltenReevaluateCell<cr>", { desc = "Evalutate Python Cell" })
map("v", "<leader>m", "<esc><cmd>MoltenEvaluateVisual<cr>gv", { silent = true, desc = "Evaluate Visual Selection" })
map({ "n", "v" }, "<leader>aa", ":GpChatNew<cr>", { desc = "Start GPT" })
map({ "n", "v" }, "<leader>ai", ":GpImplement<cr>", { desc = "Start GPT" })
map({ "n", "v" }, "<leader>ar", ":GpRewrite<cr>", { desc = "Rewrite code with GPT" })
map({ "n", "v" }, "<leader>ap", ":GpChatPaste<cr>", { desc = "Paste to GPT" })
map("n", "-", "<cmd>Oil<cr>", { desc = "Open directory in buffer" })
map("n", "<leader>cp", "<cmd>MoltenImagePopup<cr>", { desc = "Open Image in Popup" })
map("n", "<Enter>", "<Plug>RDSendLine", {})
map("n", "<leader>pq", "<cmd>QuartoPreview<cr>", { desc = "Preview Quarto" })
vim.keymap.del("n", "<c-h>")
vim.keymap.del("n", "<c-j>")
vim.keymap.del("n", "<c-k>")
vim.keymap.del("n", "<c-l>")
local split = require("smart-splits")
vim.keymap.set("n", "<A-h>", split.resize_left)
vim.keymap.set("n", "<A-j>", split.resize_down)
vim.keymap.set("n", "<A-k>", split.resize_up)
vim.keymap.set("n", "<A-l>", split.resize_right)
-- moving between splits
--
local nvim_tmux_nav = require("nvim-tmux-navigation")
vim.keymap.set("n", "<C-h>", nvim_tmux_nav.NvimTmuxNavigateLeft)
vim.keymap.set("n", "<C-j>", nvim_tmux_nav.NvimTmuxNavigateDown)
vim.keymap.set("n", "<C-k>", nvim_tmux_nav.NvimTmuxNavigateUp)
vim.keymap.set("n", "<C-l>", nvim_tmux_nav.NvimTmuxNavigateRight)
vim.keymap.set("n", "<C-\\>", nvim_tmux_nav.NvimTmuxNavigateLastActive)
vim.keymap.set("n", "<C-Space>", nvim_tmux_nav.NvimTmuxNavigateNext)
-- swapping buffers between windows
vim.keymap.set("n", "<leader><leader>h", split.swap_buf_left)
vim.keymap.set("n", "<leader><leader>j", split.swap_buf_down)
vim.keymap.set("n", "<leader><leader>k", split.swap_buf_up)
vim.keymap.set("n", "<leader><leader>l", split.swap_buf_right)

map("t", "<c-0>", [[<c-\><c-n>]])

map({ "n", "v" }, "<C-d>", '<cmd>call smoothie#do("\\<C-D>")<CR>')
map({ "n", "v" }, "<C-u>", '<cmd>call smoothie#do("\\<C-U>")<CR>')
